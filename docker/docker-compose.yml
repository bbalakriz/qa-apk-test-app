# QA APK Test Automation - Hybrid Container Compose  
# Framework in container + Host emulator (cleanest setup)
# QA can watch tests run on their visible emulator screen
# Optimized for Podman
# 
# EXACT ALIGNED VERSIONS (prevents ESM errors):
# - Node.js: 18.20.8 (exact match with local .nvmrc)
# - Java: OpenJDK 17.0.16 (exact match with local version)
# - ADB: 1.0.41 (exact match with tested version)

version: '3.8'

services:
  qa-automation:
    image: ${QA_IMAGE:-quay.io/balki404/qa-automation:linux-amd64}
    platform: ${PLATFORM:-linux/amd64}
    container_name: qa-automation
    volumes:
      # Mount test results and screenshots to host (using writable tmp directories)
      - ../test-results:/tmp/test-results
      - ../screenshots:/tmp/screenshots
      - ../logs:/tmp/logs
      # Mount APK from host
      - ../app.apk:/app/app.apk:ro
      # Mount test configuration and files
      - ../wdio.conf.js:/app/wdio.conf.js:ro
      - ../package.json:/app/package.json:ro
      # Mount features and step-definitions for easy editing
      - ../features:/app/features
      - ../step-definitions:/app/step-definitions

    environment:
      - ANDROID_HOME=/opt/android-sdk
      - JAVA_HOME=/usr/lib/jvm/java-17-openjdk
      - APPIUM_HOME=/tmp/appium
      - HOME=/tmp
      - APPIUM_HOST=192.168.127.2  # CRITICAL: Update this IP for your machine! See QUICK_START.md

    # Use host network for ADB access
    network_mode: "host"
    command: ["sh", "-c", "sleep 5 && tail -f /dev/null"]

  appium-server:
    image: ${APPIUM_IMAGE:-quay.io/balki404/qa-automation:linux-amd64}
    platform: ${PLATFORM:-linux/amd64}
    container_name: appium-server
    environment:
      - ANDROID_HOME=/opt/android-sdk
      - JAVA_HOME=/usr/lib/jvm/java-17-openjdk
      - APPIUM_HOME=/tmp/appium
      - HOME=/tmp

    # Use host network for better compatibility with emulator
    network_mode: "host"
    command: ["npm", "run", "appium"]